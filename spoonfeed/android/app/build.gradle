plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.appdistribution'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    namespace "com.reelai.spoonfeed"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.reelai.spoonfeed"
        minSdkVersion 24
        targetSdkVersion flutter.targetSdkVersion
        versionCode 2
        versionName "1.0.0"
    }

    signingConfigs {
        release {
            storeFile file("upload-keystore.jks")
            storePassword "android"
            keyAlias "upload"
            keyPassword "android"
        }
    }

    buildTypes {
        debug {
            // Debug configuration
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            
            firebaseAppDistribution {
                artifactType="APK"
                releaseNotes="Update fixing Google Sign-In functionality"
                testers="michael.mallory@reelai.com"
            }
        }
    }

    buildFeatures {
        buildConfig true
    }

    lint {
        disable 'InvalidPackage'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.android.play:core:1.10.3'
}

// Add task to copy APK to Flutter's expected location
tasks.register('copyDebugApk') {
    doLast {
        copy {
            from "${buildDir}/outputs/apk/debug"
            into "${rootProject.buildDir}/app/outputs/flutter-apk"
            include "app-debug.apk"
        }
    }
}

// Make the copy task run after the debug APK is built
tasks.whenTaskAdded { task ->
    if (task.name == 'assembleDebug') {
        task.finalizedBy(copyDebugApk)
    }
}
